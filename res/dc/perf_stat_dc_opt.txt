.....................
deepcopy: Mean +- std dev: 488 us +- 6 us
.....................
deepcopy_reduce: Mean +- std dev: 4.41 us +- 0.05 us
.....................
deepcopy_memo: Mean +- std dev: 67.1 us +- 0.3 us
.....................
deepcopy: Mean +- std dev: 487 us +- 4 us
.....................
deepcopy_reduce: Mean +- std dev: 4.42 us +- 0.06 us
.....................
deepcopy_memo: Mean +- std dev: 67.4 us +- 0.8 us
.....................
deepcopy: Mean +- std dev: 489 us +- 5 us
.....................
WARNING: the benchmark result may be unstable
* Not enough samples to get a stable result (95% certainly of less than 1% variation)

Try to rerun the benchmark with more runs, values and/or loops.
Run 'python3 -m pyperf system tune' command to reduce the system jitter.
Use pyperf stats, pyperf dump and pyperf hist to analyze results.
Use --quiet option to hide these warnings.

deepcopy_reduce: Mean +- std dev: 4.41 us +- 0.06 us
.....................
deepcopy_memo: Mean +- std dev: 67.1 us +- 0.4 us
.....................
deepcopy: Mean +- std dev: 489 us +- 4 us
.....................
deepcopy_reduce: Mean +- std dev: 4.40 us +- 0.05 us
.....................
deepcopy_memo: Mean +- std dev: 67.1 us +- 0.3 us
.....................
deepcopy: Mean +- std dev: 487 us +- 4 us
.....................
deepcopy_reduce: Mean +- std dev: 4.40 us +- 0.05 us
.....................
deepcopy_memo: Mean +- std dev: 67.2 us +- 0.4 us

 Performance counter stats for 'python3 pyperformance-main/pyperformance/data-files/benchmarks/bm_deepcopy/run_benchmark_opt.py' (5 runs):

         43,849.25 msec task-clock                #    0.956 CPUs utilized            ( +-  0.02% )
             4,271      context-switches          #   97.336 /sec                     ( +-  0.20% )
                43      cpu-migrations            #    0.980 /sec                     ( +-  9.45% )
           235,152      page-faults               #    5.359 K/sec                    ( +-  0.01% )
   110,638,350,978      cycles                    #    2.521 GHz                      ( +-  0.21% )  (30.87%)
   282,302,384,161      instructions              #    2.53  insn per cycle           ( +-  0.26% )  (38.67%)
    53,219,158,069      branches                  #    1.213 G/sec                    ( +-  0.28% )  (38.71%)
       269,457,504      branch-misses             #    0.50% of all branches          ( +-  1.01% )  (39.14%)
    82,281,470,688      L1-dcache-loads           #    1.875 G/sec                    ( +-  0.44% )  (39.52%)
     1,674,442,015      L1-dcache-load-misses     #    2.00% of all L1-dcache accesses  ( +-  0.62% )  (39.68%)
       225,128,733      LLC-loads                 #    5.131 M/sec                    ( +-  3.19% )  (31.89%)
         5,845,596      LLC-load-misses           #    2.85% of all LL-cache accesses  ( +-  3.79% )  (31.64%)
   <not supported>      L1-icache-loads                                             
       415,144,364      L1-icache-load-misses                                         ( +-  2.94% )  (31.42%)
    83,857,680,932      dTLB-loads                #    1.911 G/sec                    ( +-  0.36% )  (31.24%)
        23,183,741      dTLB-load-misses          #    0.03% of all dTLB cache accesses  ( +-  2.10% )  (31.01%)
        21,461,318      iTLB-loads                #  489.103 K/sec                    ( +-  3.97% )  (30.99%)
         9,337,658      iTLB-load-misses          #   45.58% of all iTLB cache accesses  ( +-  6.29% )  (30.80%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

           45.8560 +- 0.0978 seconds time elapsed  ( +-  0.21% )

