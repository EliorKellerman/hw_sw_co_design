.....................
deepcopy: Mean +- std dev: 669 us +- 4 us
.....................
deepcopy_reduce: Mean +- std dev: 5.80 us +- 0.05 us
.....................
deepcopy_memo: Mean +- std dev: 79.8 us +- 0.3 us
.....................
deepcopy: Mean +- std dev: 669 us +- 5 us
.....................
deepcopy_reduce: Mean +- std dev: 5.78 us +- 0.06 us
.....................
deepcopy_memo: Mean +- std dev: 79.9 us +- 0.6 us
.....................
deepcopy: Mean +- std dev: 669 us +- 4 us
.....................
deepcopy_reduce: Mean +- std dev: 5.79 us +- 0.07 us
.....................
deepcopy_memo: Mean +- std dev: 79.8 us +- 0.4 us
.....................
deepcopy: Mean +- std dev: 669 us +- 5 us
.....................
deepcopy_reduce: Mean +- std dev: 5.81 us +- 0.07 us
.....................
deepcopy_memo: Mean +- std dev: 79.9 us +- 0.6 us
.....................
deepcopy: Mean +- std dev: 669 us +- 6 us
.....................
WARNING: the benchmark result may be unstable
* Not enough samples to get a stable result (95% certainly of less than 1% variation)

Try to rerun the benchmark with more runs, values and/or loops.
Run 'python3 -m pyperf system tune' command to reduce the system jitter.
Use pyperf stats, pyperf dump and pyperf hist to analyze results.
Use --quiet option to hide these warnings.

deepcopy_reduce: Mean +- std dev: 5.80 us +- 0.07 us
.....................
deepcopy_memo: Mean +- std dev: 79.8 us +- 0.5 us

 Performance counter stats for 'python3 pyperformance-main/pyperformance/data-files/benchmarks/bm_deepcopy/run_benchmark.py' (5 runs):

         54,027.16 msec task-clock                #    0.961 CPUs utilized            ( +-  0.07% )
             4,205      context-switches          #   77.937 /sec                     ( +-  0.34% )
               108      cpu-migrations            #    2.002 /sec                     ( +- 11.63% )
           234,984      page-faults               #    4.355 K/sec                    ( +-  0.00% )
   138,092,836,122      cycles                    #    2.559 GHz                      ( +-  0.23% )  (31.23%)
   360,269,272,782      instructions              #    2.62  insn per cycle           ( +-  0.21% )  (38.98%)
    67,040,697,942      branches                  #    1.243 G/sec                    ( +-  0.24% )  (38.71%)
       291,527,706      branch-misses             #    0.44% of all branches          ( +-  0.61% )  (38.55%)
   106,020,776,050      L1-dcache-loads           #    1.965 G/sec                    ( +-  0.25% )  (38.71%)
     1,905,702,387      L1-dcache-load-misses     #    1.81% of all L1-dcache accesses  ( +-  0.95% )  (38.93%)
       201,801,278      LLC-loads                 #    3.740 M/sec                    ( +-  5.86% )  (31.23%)
         9,787,011      LLC-load-misses           #    4.73% of all LL-cache accesses  ( +- 11.40% )  (31.34%)
   <not supported>      L1-icache-loads                                             
       462,530,454      L1-icache-load-misses                                         ( +-  1.94% )  (31.28%)
   104,736,459,001      dTLB-loads                #    1.941 G/sec                    ( +-  0.29% )  (31.26%)
        25,888,663      dTLB-load-misses          #    0.02% of all dTLB cache accesses  ( +-  2.83% )  (31.35%)
        24,020,092      iTLB-loads                #  445.197 K/sec                    ( +-  2.72% )  (31.43%)
        11,407,731      iTLB-load-misses          #   47.77% of all iTLB cache accesses  ( +-  3.05% )  (31.32%)
   <not supported>      L1-dcache-prefetches                                        
   <not supported>      L1-dcache-prefetch-misses                                   

            56.213 +- 0.150 seconds time elapsed  ( +-  0.27% )

